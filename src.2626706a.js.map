{"version":3,"sources":["js/timer1.js","js/bodyBackground.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","fieldDays","document","querySelector","fieldHours","fieldMins","fieldSecs","start","getTimerComponents","time","days","Math","floor","hours","mins","secs","updateDate","textContent","setInterval","Date","now","timer1","body","colors","randomIntegerFromInterval","min","max","random","intervalID","bodyColor","style","backgroundColor","length","bodyBackground"],"mappings":";;;AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXE,KAAAA,KAAO,CACVC,UAAWC,SAASC,iBAAiB,KAAKL,oCAC1CM,WAAYF,SAASC,iBAAiB,KAAKL,qCAC3CO,UAAWH,SAASC,iBAAiB,KAAKL,oCAC1CQ,UAAWJ,SAASC,iBAAiB,KAAKL,qCAEvCS,KAAAA,MAAMR,GAGbS,mBAAmBC,GAKV,MAAA,CAAEC,KAJIC,KAAKC,MAAMH,EAAQ,OAIjBI,MAHDF,KAAKC,MAAOH,EAAQ,MAAyB,MAGrCK,KAFTH,KAAKC,MAAOH,EAAQ,KAAoB,KAEzBM,KADfJ,KAAKC,MAAOH,EAAQ,IAAc,MAIjDO,YAAW,KAAEN,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IACzBf,KAAAA,KAAKC,UAAUgB,eAAiBP,IAChCV,KAAAA,KAAKI,WAAWa,eAAiBJ,IACjCb,KAAAA,KAAKK,UAAUY,eAAiBH,IAChCd,KAAAA,KAAKM,UAAUW,eAAiBF,IAGvCR,MAAMR,GACJmB,YAAY,KACLF,KAAAA,WAAW,KAAKR,mBAAmBT,EAAaoB,KAAKC,SACzD,MAIP,MAAMC,EAAS,IAAIzB,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIoB,KAAK;;ACpCvB,MAAMG,EAAOpB,SAASC,cAAc,QAE9BoB,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAE5EC,EAA4B,CAACC,EAAKC,IAC/Bf,KAAKC,MAAMD,KAAKgB,UAAYD,EAAMD,EAAM,GAAKA,GAGtD,IAAIG,EAAa,KAEjB,MAAMC,EAAY,KAChBP,EAAKQ,MAAMC,gBAAkBR,EAAOC,EAA0B,EAAGD,EAAOS,OAAS,KAG7EC,EAAiB,KACrBL,EAAaV,YAAYW,EAAW,MAApCD,EAAaV,YAAYW,EAAW;;ACbtC,aAFA,QAAA,oBACA,QAAA,eACA,QAAA","file":"src.2626706a.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.refs = {\n      fieldDays: document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n      fieldHours: document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n      fieldMins: document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n      fieldSecs: document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n    };\n    this.start(targetDate);\n  }\n\n  getTimerComponents(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n    return { days, hours, mins, secs };\n  }\n\n  updateDate({ days, hours, mins, secs }) {\n    this.refs.fieldDays.textContent = `${days}`;\n    this.refs.fieldHours.textContent = `${hours}`;\n    this.refs.fieldMins.textContent = `${mins}`;\n    this.refs.fieldSecs.textContent = `${secs}`;\n  }\n\n  start(targetDate) {\n    setInterval(() => {\n      this.updateDate(this.getTimerComponents(targetDate - Date.now()));\n    }, 1000);\n  }\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jan 1, 2022'),\n});","const body = document.querySelector('body');\n\nconst colors = ['#FFFFFF', '#2822d4', '#FF9800', '#800000', '#94000c', '#fecda2', '#5c9f01'];\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nlet intervalID = null;\n\nconst bodyColor = () => {\n  body.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length - 1)];\n};\n\nconst bodyBackground = () => {\n  intervalID = setInterval(bodyColor, 1000);\n};\nbodyBackground();\n","import './sass/main.scss';\nimport './js/timer1'\nimport './js/bodyBackground'"]}