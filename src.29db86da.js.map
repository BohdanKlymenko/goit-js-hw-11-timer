{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","fieldDays","textContent","console","log","document","querySelector","fieldHours","fieldMins","fieldSecs","start","timer1","Date"],"mappings":";;;AAkDA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAlDA,QAAA,oBAEA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IAWhB,EAAA,KAAA,QAAA,KACCC,KAAAA,KAAKC,UAAUC,YAAY,IAChCC,QAAQC,IAAI,KAAKJ,QAZZF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,KAAO,CACRC,UAAWI,SAASC,iBAAiB,KAAKR,oCAC1CS,WAAYF,SAASC,iBAAiB,KAAKR,qCAC3CU,UAAWH,SAASC,iBAAiB,KAAKR,oCAC1CW,UAAWJ,SAASC,iBAAiB,KAAKR,qCAEzCY,KAAAA,SAQb,MAAMC,EAAS,IAAIf,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIa,KAAK","file":"src.29db86da.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer{\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.refs = {\n            fieldDays: document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n            fieldHours: document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n            fieldMins: document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n            fieldSecs: document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n        };\n        this.start();\n    }\n    start = () => {\n        this.refs.fieldDays.textContent=100\n        console.log(this.refs);\n    };\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2019'),\n});\n\n// timer1.start()\n\n/*\n * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\n * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\n */\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n/*\n * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\n * остатка % и делим его на количество миллисекунд в одном часе\n * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\n */\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n/*\n * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\n * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\n */\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\n/*\n * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\n * миллисекунд в одной секунде (1000)\n */\n// const secs = Math.floor((time % (1000 * 60)) / 1000);"]}